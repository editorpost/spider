// Code generated by ent, DO NOT EDIT.

package extractindex

import (
	"time"

	"entgo.io/ent/dialect/sql"
	"github.com/editorpost/spider/store/ent/predicate"
	"github.com/google/uuid"
)

// ID filters vertices based on their ID field.
func ID(id uuid.UUID) predicate.ExtractIndex {
	return predicate.ExtractIndex(sql.FieldEQ(FieldID, id))
}

// IDEQ applies the EQ predicate on the ID field.
func IDEQ(id uuid.UUID) predicate.ExtractIndex {
	return predicate.ExtractIndex(sql.FieldEQ(FieldID, id))
}

// IDNEQ applies the NEQ predicate on the ID field.
func IDNEQ(id uuid.UUID) predicate.ExtractIndex {
	return predicate.ExtractIndex(sql.FieldNEQ(FieldID, id))
}

// IDIn applies the In predicate on the ID field.
func IDIn(ids ...uuid.UUID) predicate.ExtractIndex {
	return predicate.ExtractIndex(sql.FieldIn(FieldID, ids...))
}

// IDNotIn applies the NotIn predicate on the ID field.
func IDNotIn(ids ...uuid.UUID) predicate.ExtractIndex {
	return predicate.ExtractIndex(sql.FieldNotIn(FieldID, ids...))
}

// IDGT applies the GT predicate on the ID field.
func IDGT(id uuid.UUID) predicate.ExtractIndex {
	return predicate.ExtractIndex(sql.FieldGT(FieldID, id))
}

// IDGTE applies the GTE predicate on the ID field.
func IDGTE(id uuid.UUID) predicate.ExtractIndex {
	return predicate.ExtractIndex(sql.FieldGTE(FieldID, id))
}

// IDLT applies the LT predicate on the ID field.
func IDLT(id uuid.UUID) predicate.ExtractIndex {
	return predicate.ExtractIndex(sql.FieldLT(FieldID, id))
}

// IDLTE applies the LTE predicate on the ID field.
func IDLTE(id uuid.UUID) predicate.ExtractIndex {
	return predicate.ExtractIndex(sql.FieldLTE(FieldID, id))
}

// PayloadID applies equality check predicate on the "payload_id" field. It's identical to PayloadIDEQ.
func PayloadID(v uuid.UUID) predicate.ExtractIndex {
	return predicate.ExtractIndex(sql.FieldEQ(FieldPayloadID, v))
}

// SpiderID applies equality check predicate on the "spider_id" field. It's identical to SpiderIDEQ.
func SpiderID(v uuid.UUID) predicate.ExtractIndex {
	return predicate.ExtractIndex(sql.FieldEQ(FieldSpiderID, v))
}

// Title applies equality check predicate on the "title" field. It's identical to TitleEQ.
func Title(v string) predicate.ExtractIndex {
	return predicate.ExtractIndex(sql.FieldEQ(FieldTitle, v))
}

// ExtractedAt applies equality check predicate on the "extracted_at" field. It's identical to ExtractedAtEQ.
func ExtractedAt(v time.Time) predicate.ExtractIndex {
	return predicate.ExtractIndex(sql.FieldEQ(FieldExtractedAt, v))
}

// Status applies equality check predicate on the "status" field. It's identical to StatusEQ.
func Status(v uint8) predicate.ExtractIndex {
	return predicate.ExtractIndex(sql.FieldEQ(FieldStatus, v))
}

// PayloadIDEQ applies the EQ predicate on the "payload_id" field.
func PayloadIDEQ(v uuid.UUID) predicate.ExtractIndex {
	return predicate.ExtractIndex(sql.FieldEQ(FieldPayloadID, v))
}

// PayloadIDNEQ applies the NEQ predicate on the "payload_id" field.
func PayloadIDNEQ(v uuid.UUID) predicate.ExtractIndex {
	return predicate.ExtractIndex(sql.FieldNEQ(FieldPayloadID, v))
}

// PayloadIDIn applies the In predicate on the "payload_id" field.
func PayloadIDIn(vs ...uuid.UUID) predicate.ExtractIndex {
	return predicate.ExtractIndex(sql.FieldIn(FieldPayloadID, vs...))
}

// PayloadIDNotIn applies the NotIn predicate on the "payload_id" field.
func PayloadIDNotIn(vs ...uuid.UUID) predicate.ExtractIndex {
	return predicate.ExtractIndex(sql.FieldNotIn(FieldPayloadID, vs...))
}

// PayloadIDGT applies the GT predicate on the "payload_id" field.
func PayloadIDGT(v uuid.UUID) predicate.ExtractIndex {
	return predicate.ExtractIndex(sql.FieldGT(FieldPayloadID, v))
}

// PayloadIDGTE applies the GTE predicate on the "payload_id" field.
func PayloadIDGTE(v uuid.UUID) predicate.ExtractIndex {
	return predicate.ExtractIndex(sql.FieldGTE(FieldPayloadID, v))
}

// PayloadIDLT applies the LT predicate on the "payload_id" field.
func PayloadIDLT(v uuid.UUID) predicate.ExtractIndex {
	return predicate.ExtractIndex(sql.FieldLT(FieldPayloadID, v))
}

// PayloadIDLTE applies the LTE predicate on the "payload_id" field.
func PayloadIDLTE(v uuid.UUID) predicate.ExtractIndex {
	return predicate.ExtractIndex(sql.FieldLTE(FieldPayloadID, v))
}

// SpiderIDEQ applies the EQ predicate on the "spider_id" field.
func SpiderIDEQ(v uuid.UUID) predicate.ExtractIndex {
	return predicate.ExtractIndex(sql.FieldEQ(FieldSpiderID, v))
}

// SpiderIDNEQ applies the NEQ predicate on the "spider_id" field.
func SpiderIDNEQ(v uuid.UUID) predicate.ExtractIndex {
	return predicate.ExtractIndex(sql.FieldNEQ(FieldSpiderID, v))
}

// SpiderIDIn applies the In predicate on the "spider_id" field.
func SpiderIDIn(vs ...uuid.UUID) predicate.ExtractIndex {
	return predicate.ExtractIndex(sql.FieldIn(FieldSpiderID, vs...))
}

// SpiderIDNotIn applies the NotIn predicate on the "spider_id" field.
func SpiderIDNotIn(vs ...uuid.UUID) predicate.ExtractIndex {
	return predicate.ExtractIndex(sql.FieldNotIn(FieldSpiderID, vs...))
}

// SpiderIDGT applies the GT predicate on the "spider_id" field.
func SpiderIDGT(v uuid.UUID) predicate.ExtractIndex {
	return predicate.ExtractIndex(sql.FieldGT(FieldSpiderID, v))
}

// SpiderIDGTE applies the GTE predicate on the "spider_id" field.
func SpiderIDGTE(v uuid.UUID) predicate.ExtractIndex {
	return predicate.ExtractIndex(sql.FieldGTE(FieldSpiderID, v))
}

// SpiderIDLT applies the LT predicate on the "spider_id" field.
func SpiderIDLT(v uuid.UUID) predicate.ExtractIndex {
	return predicate.ExtractIndex(sql.FieldLT(FieldSpiderID, v))
}

// SpiderIDLTE applies the LTE predicate on the "spider_id" field.
func SpiderIDLTE(v uuid.UUID) predicate.ExtractIndex {
	return predicate.ExtractIndex(sql.FieldLTE(FieldSpiderID, v))
}

// TitleEQ applies the EQ predicate on the "title" field.
func TitleEQ(v string) predicate.ExtractIndex {
	return predicate.ExtractIndex(sql.FieldEQ(FieldTitle, v))
}

// TitleNEQ applies the NEQ predicate on the "title" field.
func TitleNEQ(v string) predicate.ExtractIndex {
	return predicate.ExtractIndex(sql.FieldNEQ(FieldTitle, v))
}

// TitleIn applies the In predicate on the "title" field.
func TitleIn(vs ...string) predicate.ExtractIndex {
	return predicate.ExtractIndex(sql.FieldIn(FieldTitle, vs...))
}

// TitleNotIn applies the NotIn predicate on the "title" field.
func TitleNotIn(vs ...string) predicate.ExtractIndex {
	return predicate.ExtractIndex(sql.FieldNotIn(FieldTitle, vs...))
}

// TitleGT applies the GT predicate on the "title" field.
func TitleGT(v string) predicate.ExtractIndex {
	return predicate.ExtractIndex(sql.FieldGT(FieldTitle, v))
}

// TitleGTE applies the GTE predicate on the "title" field.
func TitleGTE(v string) predicate.ExtractIndex {
	return predicate.ExtractIndex(sql.FieldGTE(FieldTitle, v))
}

// TitleLT applies the LT predicate on the "title" field.
func TitleLT(v string) predicate.ExtractIndex {
	return predicate.ExtractIndex(sql.FieldLT(FieldTitle, v))
}

// TitleLTE applies the LTE predicate on the "title" field.
func TitleLTE(v string) predicate.ExtractIndex {
	return predicate.ExtractIndex(sql.FieldLTE(FieldTitle, v))
}

// TitleContains applies the Contains predicate on the "title" field.
func TitleContains(v string) predicate.ExtractIndex {
	return predicate.ExtractIndex(sql.FieldContains(FieldTitle, v))
}

// TitleHasPrefix applies the HasPrefix predicate on the "title" field.
func TitleHasPrefix(v string) predicate.ExtractIndex {
	return predicate.ExtractIndex(sql.FieldHasPrefix(FieldTitle, v))
}

// TitleHasSuffix applies the HasSuffix predicate on the "title" field.
func TitleHasSuffix(v string) predicate.ExtractIndex {
	return predicate.ExtractIndex(sql.FieldHasSuffix(FieldTitle, v))
}

// TitleEqualFold applies the EqualFold predicate on the "title" field.
func TitleEqualFold(v string) predicate.ExtractIndex {
	return predicate.ExtractIndex(sql.FieldEqualFold(FieldTitle, v))
}

// TitleContainsFold applies the ContainsFold predicate on the "title" field.
func TitleContainsFold(v string) predicate.ExtractIndex {
	return predicate.ExtractIndex(sql.FieldContainsFold(FieldTitle, v))
}

// ExtractedAtEQ applies the EQ predicate on the "extracted_at" field.
func ExtractedAtEQ(v time.Time) predicate.ExtractIndex {
	return predicate.ExtractIndex(sql.FieldEQ(FieldExtractedAt, v))
}

// ExtractedAtNEQ applies the NEQ predicate on the "extracted_at" field.
func ExtractedAtNEQ(v time.Time) predicate.ExtractIndex {
	return predicate.ExtractIndex(sql.FieldNEQ(FieldExtractedAt, v))
}

// ExtractedAtIn applies the In predicate on the "extracted_at" field.
func ExtractedAtIn(vs ...time.Time) predicate.ExtractIndex {
	return predicate.ExtractIndex(sql.FieldIn(FieldExtractedAt, vs...))
}

// ExtractedAtNotIn applies the NotIn predicate on the "extracted_at" field.
func ExtractedAtNotIn(vs ...time.Time) predicate.ExtractIndex {
	return predicate.ExtractIndex(sql.FieldNotIn(FieldExtractedAt, vs...))
}

// ExtractedAtGT applies the GT predicate on the "extracted_at" field.
func ExtractedAtGT(v time.Time) predicate.ExtractIndex {
	return predicate.ExtractIndex(sql.FieldGT(FieldExtractedAt, v))
}

// ExtractedAtGTE applies the GTE predicate on the "extracted_at" field.
func ExtractedAtGTE(v time.Time) predicate.ExtractIndex {
	return predicate.ExtractIndex(sql.FieldGTE(FieldExtractedAt, v))
}

// ExtractedAtLT applies the LT predicate on the "extracted_at" field.
func ExtractedAtLT(v time.Time) predicate.ExtractIndex {
	return predicate.ExtractIndex(sql.FieldLT(FieldExtractedAt, v))
}

// ExtractedAtLTE applies the LTE predicate on the "extracted_at" field.
func ExtractedAtLTE(v time.Time) predicate.ExtractIndex {
	return predicate.ExtractIndex(sql.FieldLTE(FieldExtractedAt, v))
}

// StatusEQ applies the EQ predicate on the "status" field.
func StatusEQ(v uint8) predicate.ExtractIndex {
	return predicate.ExtractIndex(sql.FieldEQ(FieldStatus, v))
}

// StatusNEQ applies the NEQ predicate on the "status" field.
func StatusNEQ(v uint8) predicate.ExtractIndex {
	return predicate.ExtractIndex(sql.FieldNEQ(FieldStatus, v))
}

// StatusIn applies the In predicate on the "status" field.
func StatusIn(vs ...uint8) predicate.ExtractIndex {
	return predicate.ExtractIndex(sql.FieldIn(FieldStatus, vs...))
}

// StatusNotIn applies the NotIn predicate on the "status" field.
func StatusNotIn(vs ...uint8) predicate.ExtractIndex {
	return predicate.ExtractIndex(sql.FieldNotIn(FieldStatus, vs...))
}

// StatusGT applies the GT predicate on the "status" field.
func StatusGT(v uint8) predicate.ExtractIndex {
	return predicate.ExtractIndex(sql.FieldGT(FieldStatus, v))
}

// StatusGTE applies the GTE predicate on the "status" field.
func StatusGTE(v uint8) predicate.ExtractIndex {
	return predicate.ExtractIndex(sql.FieldGTE(FieldStatus, v))
}

// StatusLT applies the LT predicate on the "status" field.
func StatusLT(v uint8) predicate.ExtractIndex {
	return predicate.ExtractIndex(sql.FieldLT(FieldStatus, v))
}

// StatusLTE applies the LTE predicate on the "status" field.
func StatusLTE(v uint8) predicate.ExtractIndex {
	return predicate.ExtractIndex(sql.FieldLTE(FieldStatus, v))
}

// And groups predicates with the AND operator between them.
func And(predicates ...predicate.ExtractIndex) predicate.ExtractIndex {
	return predicate.ExtractIndex(sql.AndPredicates(predicates...))
}

// Or groups predicates with the OR operator between them.
func Or(predicates ...predicate.ExtractIndex) predicate.ExtractIndex {
	return predicate.ExtractIndex(sql.OrPredicates(predicates...))
}

// Not applies the not operator on the given predicate.
func Not(p predicate.ExtractIndex) predicate.ExtractIndex {
	return predicate.ExtractIndex(sql.NotPredicates(p))
}
